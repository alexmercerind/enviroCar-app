plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
}

android {
    namespace "org.envirocar.app"

    defaultConfig {
        versionName "2.1.0"
        versionCode 64

        minSdk libs.versions.minSdk.get().toInteger()
        compileSdk libs.versions.compileSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        buildConfig true
        viewBinding true
    }

    signingConfigs {
        release {
            storeFile file(project.properties["RELEASE_STORE_FILE"] ?: "/tmp/tmp.key")
            storePassword project.properties["RELEASE_STORE_PASSWORD"] ?: ""
            keyAlias project.properties["RELEASE_KEY_ALIAS"] ?: ""
            keyPassword project.properties["RELEASE_KEY_PASSWORD"] ?: ""
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.debug

            applicationIdSuffix ".debug"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    sourceSets {
        main {
            manifest.srcFile "AndroidManifest.xml"
            java.srcDirs = ["src"]
            resources.srcDirs = ["src"]
            aidl.srcDirs = ["src"]
            renderscript.srcDirs = ["src"]
            res.srcDirs = ["res"]
            assets.srcDirs = ["assets"]
        }

        // Move the tests to tests/java, tests/res, etc...
        test.setRoot("tests/unit")
        androidTest.setRoot("tests/android")

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot("build-types/debug")
        release.setRoot("build-types/release")
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
        }
    }

    packagingOptions {
        exclude "META-INF/services/javax.annotation.processing.Processor"
        exclude "META-INF/rxjava.properties"
    }
}

dependencies {
    // Android dependencies.

    implementation libs.androidx.appcompat
    implementation libs.androidx.legacy.support.v4
    implementation libs.androidx.core
    implementation libs.material
    implementation libs.androidx.cardview
    implementation libs.androidx.recyclerview
    implementation libs.androidx.constraintlayout

    implementation libs.androidx.preference
    implementation libs.androidx.room.runtime
    implementation libs.androidx.room.rxjava2
    annotationProcessor libs.room.compiler

    implementation libs.androidx.lifecycle.compiler
    implementation libs.androidx.lifecycle.extensions
    implementation libs.androidx.lifecycle.runtime

    // Dependency injection, view injection, event bus etc.

    implementation libs.dagger
    annotationProcessor libs.dagger.compiler

    implementation libs.otto

    // Google dependencies.

    implementation libs.gson
    implementation libs.play.services.location
    implementation libs.jsr305
    implementation libs.core

    // RxJava dependencies.

    implementation libs.rxjava
    implementation libs.rxjava2.rxandroid
    implementation libs.rx.preferences

    // RxBinding dependencies.

    implementation libs.rxbinding.core
    implementation libs.rxbinding.appcompat

    // Third party libraries.

    implementation libs.acra.core
    implementation libs.hellocharts.library
    implementation libs.fabprogresscircle
    implementation libs.android.segmented
    implementation libs.material.dialogs.core
    implementation libs.transitionseverywhere
    implementation libs.circleimageview
    implementation libs.easypermissions

    // TODO(alexmercerind): Remove after migration to org.envirocar.map.
    implementation(libs.mapbox.android.sdk)

    // Testing.

    testImplementation libs.junit
    testImplementation libs.mockito.core
    testImplementation(libs.powermock.api.mockito) {
        exclude module: "hamcrest-core"
        exclude module: "objenesis"
    }
    testImplementation(libs.powermock.module.junit4) {
        exclude module: "hamcrest-core"
        exclude module: "objenesis"
    }
    androidTestImplementation libs.junit
    androidTestImplementation(libs.androidx.runner) {
        exclude module: "support-annotations"
    }

    androidTestImplementation libs.core.testing
    androidTestImplementation(libs.androidx.rules) {
        exclude module: "support-annotations"
    }

    // Modules.

    api project(path: ":org.envirocar.algorithm")
    api project(path: ":org.envirocar.core")
    api project(path: ":org.envirocar.map")
    api project(path: ":org.envirocar.obd")
    api project(path: ":org.envirocar.remote")
    api project(path: ":org.envirocar.storage")
    implementation libs.envirocar.aidl
}

configurations.configureEach {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "androidx") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "${targetSdk}.+"
            }
        }
    }
    // TODO(alexmercerind): Remove after migration to org.envirocar.map.
    exclude module: "mapbox-android-core"
}
